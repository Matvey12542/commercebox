<?php
/**
 * @file
 * Commercebox slider.
 */

/**
 * Implements hook_init().
 */
function commercebox_slider_init() {
  drupal_add_css(drupal_get_path('module', 'commercebox_slider') . '/css/css_commercebox_slider.css', array(
      'group' => CSS_DEFAULT,
    ));
  drupal_add_js(drupal_get_path('module', 'commercebox_slider') . '/js/main.js', array(
      'group' => CSS_DEFAULT,
    ));
  drupal_add_library('system', 'ui.sortable');
}

/**
 * Implements hook_node_insert().
 */
function commercebox_slider_node_insert($node) {
  // Add node into nodequeue.
  if ($node->status === 1 && $node->type === 'banner') {
    $queue = nodequeue_load_queue_by_name('commercebox_slider');
    $subqueue = nodequeue_load_subqueue($queue->qid);
    nodequeue_subqueue_add($queue, $subqueue, $node->nid);
  }
}

/**
 * Implements hook_menu().
 */
function commercebox_slider_menu() {
  $items = array();
  $items['data/%'] = array(
    'title' => 'Commercebox slider',
    'page callback' => 'commercebox_slider_data_ajax_callback',
    'page arguments' => array(1),
    'delivery callback' => 'ajax_deliver',
    'access arguments' => array('access content'),
  );
  $items['data/delete/%'] = array(
    'title' => 'Commercebox slider',
    'page callback' => 'commercebox_slider_data_delete_ajax_callback',
    'page arguments' => array(2),
    'delivery callback' => 'ajax_deliver',
    'access arguments' => array('access content'),
  );
  $items['admin/ui-elements/commercebox_slider'] = array(
    'title' => 'Commercebox slider',
    'page callback' => 'commercebox_slider_callback',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'menu-admin-menu',
  );
  $items['commercebox_slider_resort'] = array(
    'title' => 'Commercebox slider',
    'page callback' => 'commercebox_slider_sortable_callback',
    'delivery callback' => 'ajax_deliver',
    'access arguments' => array('administer content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Callback function().
 */
function commercebox_slider_callback() {
  $view = views_get_view('commercebox_slider');
  $view->set_display('Master');
  $view->is_cacheable = FALSE;
  $view->pre_execute();
  $view->execute();
  $content = $view->render();

  return $content;
}

/**
 * Callback function().
 */
function commercebox_slider_sortable_callback() {
  if (!empty($_POST['slides'])) {
    $obj = json_decode($_POST['slides']);
    $slides = $obj->slides;
    foreach ($slides as $k => $obj) {
      _commercebox_slider_queue_swap($obj->nid, $k + 1);
    }
  }
}

/**
 * Implements hook_views_api().
 */
function commercebox_slider_views_api() {
  return array(
    'api' => '3',
    'path' => drupal_get_path('module', 'commercebox_slider') . '/views',
  );
}

/**
 * Ajax callback page.
 */
function commercebox_slider_data_ajax_callback($nid, $mode = NULL) {
  drupal_add_library('system', 'drupal.ajax');
  drupal_add_library('system', 'jquery.form');
  $content = '';
  $commands = array();

  if ($nid == "remove") {
    $commands[] = ajax_command_remove("#remove");
    return array('#type' => 'ajax', '#commands' => $commands);
  }
  else {
    if (is_numeric($nid)) {

      if ($mode == 'ajax') {
        $node = node_load($nid);

        $form_state = array();
        $form_state['build_info']['args'] = array($node);
        $form_state['redirect'] = '/';
        form_load_include($form_state, 'inc', 'node', 'node.pages');
        $form = drupal_build_form($node->type . '_node_form', $form_state);
        $form['revision_information']['#access'] = FALSE;
        $form['comment_settings']['#access'] = FALSE;
        $form['author']['#access'] = FALSE;
        $form['path']['#access'] = FALSE;
        $content = render($form);
      }
      else {
        drupal_goto('node/' . $nid . '/edit');
      }
    }
    if ($nid == "new") {
      $type = 'banner';
      global $user;
      $node = (object) array(
        'uid' => $user->uid,
        'name' => isset($user->name) ? $user->name : '',
        'type' => $type,
        'language' => LANGUAGE_NONE,
      );
      $form_state = array();
      $form_state['build_info']['args'] = array($node);
      $form_state['redirect'] = '/homepage';
      form_load_include($form_state, 'inc', 'node', 'node.pages');
      $form = drupal_build_form($type . '_node_form', $form_state);
      $form['revision_information']['#access'] = FALSE;
      $form['comment_settings']['#access'] = FALSE;
      $form['author']['#access'] = FALSE;
      $form['path']['#access'] = FALSE;
      $content = drupal_render($form);
    }
  }
  $remove_link = l(t('Close'), "data/remove/nojs", array(
    'attributes' => array(
      'class' => array('use-ajax', 'close'),
    ),
  ));
  $content = $remove_link . $content;
  $content = "<div id=\"remove\">$content</div>";
  $commands[] = ajax_command_after("#block-system-main", $content);

  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function commercebox_slider_form_node_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#node']->type == 'banner') {
    $form['actions']['submit']['#submit'][] = 'commercebox_slider_node_submit';
  }
}

/**
 * Submit function().
 */
function commercebox_slider_node_submit($form, &$form_state) {
  $form_state['redirect'] = '/admin/ui-elements/commercebox_slider';
}

/**
 * Ajax callback page.
 */
function commercebox_slider_data_delete_ajax_callback($nid, $mode = NULL) {
  drupal_add_library('system', 'drupal.ajax');
  drupal_add_library('system', 'jquery.form');
  $commands = array();
  if ($mode == 'ajax') {
    node_delete($nid);
  }
  else {
    drupal_goto('node/' . $nid . '/edit');
  }
  $content = "";
  $commands[] = ajax_command_after("#block-system-main", $content);

  return array('#type' => 'ajax', '#commands' => $commands);
}

/**
 * Save position for slider.
 */
function _commercebox_slider_queue_swap($nid, $pos) {
  db_update('nodequeue_nodes')
    ->fields(array('position' => $pos))
    ->condition('nid', $nid)
    ->execute();
}
